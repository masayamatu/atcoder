{
	// Place your snippets for csharp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Read console int array": {
    "prefix": "ireadarray",
	"body": [
		"Console.ReadLine().Split().Select(int.Parse).ToArray();",
		"$2"
	],
	"description": "Log output to console"
    },
	"Read console long array": {
		"prefix": "lreadarray",
		"body": [
			"Console.ReadLine().Split().Select(long.Parse).ToArray();",
			"$2"
		],
		"description": "Log output to console"
	},
	"Read int": {
		"prefix": "int",
		"body": [
			"int.Parse(Console.ReadLine());",
			"$2"
		],
		
		"description": "Log output to console"
	},
	"Read long": {
		"prefix": "long",
		"body": [
			"long.Parse(Console.ReadLine());",
			"$2"
		],
		
		"description": "Log output to console"
	},
	"Read double": {
		"prefix": "double",
		"body": [
			"double.Parse(Console.ReadLine());",
			"$2"
		],
			
		"description": "Log output to console"
	},
	"Write to console": {
		"prefix": "write",
		"body": [
			"Console.WriteLine($1);",
		],
		"description": "Log output to console"
	},
	"For roop": {
		"prefix": "for",
		"body": [
			"for($1 $2 = $3; $2$4; $2$5)",
			"{",
			"\t$6",
			"}",
		],
		"description": "Log output to console"
	},
	"String Builder": {
		"prefix": "sb",
		"body": [
			"var sb = new StringBuilder();",
		],
		"description": "Log output to console"
	},
}